fill = 'Country') +
theme_no_axes() +
scale_fill_manual(values=c('gold','red' ))
G
setwd("~/GitHub/USA-mortality")
#---------------------------------------------
# Carl Schmertmann
# created 29 Sep 18
# altered 03 Oct 18
#
# visualize remaining life expectancy
#---------------------------------------------
# devtools::install_github('thomasp85/gganimate')
rm(list=ls())
library(tidyverse)
library(gganimate)
graphics.off()
## California females 2015
file_name = 'CA_fltper_1x1.csv'
file_path = 'States/CA/CA_fltper_1x1.csv'
unzip(zipfile='lifetables.zip', files=file_path, junkpaths=TRUE)
CA = read.csv(file_name, stringsAsFactors = FALSE) %>%
filter(Year == 2015) %>%
mutate(Age = 0:110,
lx = lx/lx[Age==0],
dx = dx/sum(dx)) %>%
select(PopName:Age, lx, dx, ex)
file.remove(file_name)
#--------------------------
#  function to calculate
#  dx conditional on surv
#  to age z (returns a new data frame)
#--------------------------
conditional_survival = function(z) {
CA %>% mutate( dx = ifelse(Age < z, 0, dx/lx[Age==z]),
ez = ex[Age==z],
ez.char = formatC( ez, format='f' , digits=1),
z = z)
}
# single long data frame with alternative dx columns conditional on
# surv to different reference ages
df = do.call( 'rbind', map( 0:100, conditional_survival))
df
View(df)
# devtools::install_github('thomasp85/gganimate')
library(tidyverse)
library(ggforce)
library(data.table)
library(gganimate)
graphics.off()
windows(record=TRUE)
D = fread('USA SWE male 2016 life tables.txt') %>%
as.data.frame() %>%
select(country, age, lx)
D$age   = 0:110    # make ages numeric
D$radix = 100000   # add radix column
D$x = D$y = 0
## reorganize (wide)
D = D %>%
spread(key=country, value=lx)
setwd("~/GitHub/bonecave/life table circles")
# devtools::install_github('thomasp85/gganimate')
library(tidyverse)
library(ggforce)
library(data.table)
library(gganimate)
graphics.off()
windows(record=TRUE)
D = fread('USA SWE male 2016 life tables.txt') %>%
as.data.frame() %>%
select(country, age, lx)
D$age   = 0:110    # make ages numeric
D$radix = 100000   # add radix column
D$x = D$y = 0
## reorganize (wide)
D = D %>%
spread(key=country, value=lx)
View(D)
# devtools::install_github('thomasp85/gganimate')
library(tidyverse)
library(ggforce)
library(data.table)
library(gganimate)
graphics.off()
windows(record=TRUE)
D = fread('USA SWE male 2016 life tables.txt') %>%
as.data.frame() %>%
select(country, age, lx)
D$age   = 0:110    # make ages numeric
D$radix = 100000   # add radix column
D$x = D$y = 0
head(D)
D = D %>%
arrange(age,country)
D = fread('USA SWE male 2016 life tables.txt') %>%
as.data.frame() %>%
select(country, age, lx)
D$age   = 0:110    # make ages numeric
D$x = 0
D$y = 0
head(D)
tail(D)
expand.grid(country='radix', age=0:110, x=0, y=0)
D = fread('USA SWE male 2016 life tables.txt') %>%
as.data.frame() %>%
select(country, age, lx) %>%
rbind( expand.grid(country='radix', age=0:110, x=0, y=0))
D = fread('USA SWE male 2016 life tables.txt') %>%
as.data.frame() %>%
select(country, age, lx) %>%
rbind( expand.grid(country='radix', age=0:110, lx=100000, x=0, y=0))
expand.grid(country='radix', age=0:110, lx=100000, x=0, y=0)
expand.grid(country='radix', age=0:110, lx=100000, x=0, y=0) %>% names
names(D)
D = fread('USA SWE male 2016 life tables.txt') %>%
as.data.frame() %>%
select(country, age, lx)
D = rbind(D,
expand.grid(country='radix',
age=0:110,
lx=100000,
x=0, y=0))
D = fread('USA SWE male 2016 life tables.txt') %>%
as.data.frame() %>%
select(country, age, lx)
names(D)
D = fread('USA SWE male 2016 life tables.txt') %>%
as.data.frame() %>%
select(country, age, lx)
D$age   = 0:110    # make ages numeric
D = rbind(D,
expand.grid(country='radix',
age=0:110,
lx=100000))
D$x = 0
D$y = 0
head(D)
tail(D)
G = ggplot(data=D,aes(x=x,y=y, group=country)) +
lims(x=c(-320,320), y=c(-320,320)) +
geom_point(size=sqrt(lx)/2, shape=16,color='gold', alpha=.30)
coord_fixed() +
labs(title=paste0('Survivors to age ',D$age,'\n[Outer Circle = 100,000 male births]'),
caption='Source: Human Mortality Database http://mortality.org\n2016 mortality rates',
fill = 'Country') +
theme_no_axes() +
scale_fill_manual(values=c('gold','red' ))
G = ggplot(data=D,aes(x=x,y=y, group=country)) +
lims(x=c(-320,320), y=c(-320,320)) +
geom_point(size=sqrt(lx)/2, shape=16,color='gold', alpha=.30) +
coord_fixed() +
labs(title=paste0('Survivors to age ',D$age,'\n[Outer Circle = 100,000 male births]'),
caption='Source: Human Mortality Database http://mortality.org\n2016 mortality rates',
fill = 'Country') +
theme_no_axes() +
scale_fill_manual(values=c('gold','red' ))
G
G = ggplot(data=D,aes(x=x,y=y, group=country)) +
lims(x=c(-320,320), y=c(-320,320)) +
geom_point(size=sqrt(D$lx)/2, shape=16,color='gold', alpha=.30) +
coord_fixed() +
labs(title=paste0('Survivors to age ',D$age,'\n[Outer Circle = 100,000 male births]'),
caption='Source: Human Mortality Database http://mortality.org\n2016 mortality rates',
fill = 'Country') +
theme_no_axes() +
scale_fill_manual(values=c('gold','red' ))
G
# devtools::install_github('thomasp85/gganimate')
library(tidyverse)
library(ggforce)
library(data.table)
library(gganimate)
graphics.off()
windows(record=TRUE)
D = fread('USA SWE male 2016 life tables.txt') %>%
as.data.frame() %>%
select(country, age, lx)
D$age   = 0:110    # make ages numeric
D = rbind(D,
expand.grid(country='radix',
age=0:110,
lx=100000))
D$x = 0
D$y = 0
D = D %>%
arrange(age,country)
G = ggplot(data=D,aes(x=x,y=y, group=country)) +
lims(x=c(-320,320), y=c(-320,320)) +
geom_point(size=sqrt(D$lx)/2, shape=16,color='gold', alpha=.30) +
coord_fixed() +
labs(title=paste0('Survivors to age ',D$age,'\n[Outer Circle = 100,000 male births]'),
caption='Source: Human Mortality Database http://mortality.org\n2016 mortality rates',
fill = 'Country') +
theme_no_axes() +
scale_fill_manual(values=c('gold','red' )) +
transition_states(age)
movie = animate(G, fps=4)
movie
anim_save('compare-life-tables-as-circles.gif',
animation=movie )
G = ggplot(data=filter(D,age==75),aes(x=x,y=y, group=country)) +
lims(x=c(-320,320), y=c(-320,320)) +
geom_point(size=sqrt(D$lx)/2, shape=16,color='gold', alpha=.30) +
coord_fixed() +
labs(title=paste0('Survivors to age ',D$age,'\n[Outer Circle = 100,000 male births]'),
caption='Source: Human Mortality Database http://mortality.org\n2016 mortality rates',
fill = 'Country') +
theme_no_axes() +
scale_fill_manual(values=c('gold','red' ))
G
G = ggplot(data=filter(D,age==75),aes(x=x,y=y, group=country)) +
lims(x=c(-320,320), y=c(-320,320)) +
geom_point(size=sqrt(D$lx)/2, shape=16, alpha=.30) +
coord_fixed() +
G
G = ggplot(data=filter(D,age==75),aes(x=x,y=y, group=country)) +
lims(x=c(-320,320), y=c(-320,320)) +
geom_point(size=sqrt(D$lx)/2, shape=16, alpha=.30) +
coord_fixed()
G
G = ggplot(data=D,aes(x=x,y=y)) +
lims(x=c(-320,320), y=c(-320,320)) +
geom_point(data=filter(D,country=='SWE'),
size=sqrt(lx)/2, shape=16, alpha=.30)
G = ggplot(data=D,aes(x=x,y=y)) +
lims(x=c(-320,320), y=c(-320,320)) +
geom_point(data=filter(D,country=='SWE'),
size=sqrt(D$lx)/2, shape=16, alpha=.30)
G
G = ggplot(data=D,aes(x=x,y=y)) +
lims(x=c(-320,320), y=c(-320,320)) +
geom_point(data=filter(D,country=='SWE'),
size=sqrt(D$lx)/2, shape=16, alpha=.30) +
coord_fixed() +
labs(title=paste0('Survivors to age ',D$age,'\n[Outer Circle = 100,000 male births]'),
caption='Source: Human Mortality Database http://mortality.org\n2016 mortality rates',
fill = 'Country') +
theme_no_axes() +
scale_fill_manual(values=c('gold','red' )) +
transition_states(age)
G
G = ggplot(data=D,aes(x=x,y=y)) +
lims(x=c(-320,320), y=c(-320,320)) +
geom_point(data=filter(D,country=='SWE'),inherit.aes = FALSE,
size=sqrt(D$lx)/2, shape=16, alpha=.30) +
coord_fixed() +
labs(title=paste0('Survivors to age ',D$age,'\n[Outer Circle = 100,000 male births]'),
caption='Source: Human Mortality Database http://mortality.org\n2016 mortality rates',
fill = 'Country') +
theme_no_axes() +
scale_fill_manual(values=c('gold','red' ))
G
G = ggplot(data=D,aes(x=x,y=y)) +
lims(x=c(-320,320), y=c(-320,320)) +
geom_point(data=filter(D,country=='SWE'),inherit.aes = FALSE,
aes(x=x,y=y),size=sqrt(D$lx)/2, shape=16, alpha=.30) +
coord_fixed() +
labs(title=paste0('Survivors to age ',D$age,'\n[Outer Circle = 100,000 male births]'),
caption='Source: Human Mortality Database http://mortality.org\n2016 mortality rates',
fill = 'Country') +
theme_no_axes() +
scale_fill_manual(values=c('gold','red' ))
G
D
G = ggplot(data=D,aes(x=x,y=y, group=country)) +
lims(x=c(-320,320), y=c(-320,320)) +
geom_point(size=sqrt(D$lx)/2, shape=16, alpha=.30)
G
G = ggplot(data=D,aes(x=x,y=y, group=country)) +
lims(x=c(-320,320), y=c(-320,320)) +
geom_point(size=sqrt(D$lx)/2, shape=16, alpha=.30) +
coord_fixed() +
labs(title=paste0('Survivors to age ',D$age,'\n[Outer Circle = 100,000 male births]'),
caption='Source: Human Mortality Database http://mortality.org\n2016 mortality rates',
fill = 'Country')
G
G = ggplot(data=D,aes(x=x,y=y, group=country)) +
lims(x=c(-320,320), y=c(-320,320)) +
geom_point(size=sqrt(D$lx)/2, shape=1, alpha=.30) +
coord_fixed() +
labs(title=paste0('Survivors to age ',D$age,'\n[Outer Circle = 100,000 male births]'),
caption='Source: Human Mortality Database http://mortality.org\n2016 mortality rates',
fill = 'Country') +
theme_no_axes()
G
G = ggplot(data=D,aes(x=x,y=y, group=country)) +
lims(x=c(-320,320), y=c(-320,320)) +
geom_point(size=sqrt(D$lx)/2, shape=1, alpha=.30) +
coord_fixed() +
labs(title=paste0('Survivors to age ',D$age,'\n[Outer Circle = 100,000 male births]'),
caption='Source: Human Mortality Database http://mortality.org\n2016 mortality rates',
fill = 'Country') +
theme_no_axes() +
#        scale_fill_manual(values=c('gold','red' )) +
transition_states(age)
G
# devtools::install_github('thomasp85/gganimate')
library(tidyverse)
library(ggforce)
library(data.table)
library(gganimate)
graphics.off()
windows(record=TRUE)
D = fread('USA SWE male 2016 life tables.txt') %>%
as.data.frame() %>%
select(country, age, lx)
D$age   = 0:110    # make ages numeric
D = rbind(D,
expand.grid(country='radix',
age=0:110,
lx=100000))
D$x = 0
D$y = 0
D = D %>%
arrange(age,country)
G = ggplot(data=D,aes(x=x,y=y, group=country)) +
lims(x=c(-320,320), y=c(-320,320)) +
geom_point(size=sqrt(D$lx)/2, shape=1, alpha=.30) +
coord_fixed() +
labs(title=paste0('Survivors to age ',D$age,'\n[Outer Circle = 100,000 male births]'),
caption='Source: Human Mortality Database http://mortality.org\n2016 mortality rates',
fill = 'Country') +
theme_no_axes() +
#        scale_fill_manual(values=c('gold','red' )) +
transition_states(age)
movie = animate(G, fps=4)
anim_save('compare-life-tables-as-circles.gif',
animation=movie )
G = ggplot(data=D,aes(x=x,y=y, group=country, fill=country)) +
lims(x=c(-320,320), y=c(-320,320)) +
geom_point(size=sqrt(D$lx)/2, shape=1, alpha=.30) +
coord_fixed() +
labs(title=paste0('Survivors to age ',D$age,'\n[Outer Circle = 100,000 male births]'),
caption='Source: Human Mortality Database http://mortality.org\n2016 mortality rates',
fill = 'Country') +
theme_no_axes() +
scale_fill_manual(values=c('gold','red','blue')) +
scale_alpha_manual(values=c(.30,.10,NULL)) +
transition_states(age)
movie = animate(G, fps=4)
anim_save('compare-life-tables-as-circles.gif',
animation=movie )
movie
G = ggplot(data=D,aes(x=x,y=y, group=country, fill=country)) +
lims(x=c(-320,320), y=c(-320,320)) +
geom_point(size=sqrt(D$lx)/2, shape=1, alpha=.30) +
coord_fixed() +
labs(title=paste0('Survivors to age ',D$age,'\n[Outer Circle = 100,000 male births]'),
caption='Source: Human Mortality Database http://mortality.org\n2016 mortality rates',
fill = 'Country') +
theme_no_axes() +
scale_fill_manual(values=c('gold','red','blue')) +
scale_alpha_manual(values=c(.30,.10,NULL)) +
transition_time(age)
movie = animate(G, fps=4)
anim_save('compare-life-tables-as-circles.gif',
animation=movie )
movie
?transition_time
# devtools::install_github('thomasp85/gganimate')
library(tidyverse)
library(ggforce)
library(data.table)
library(gganimate)
graphics.off()
windows(record=TRUE)
D = fread('USA SWE male 2016 life tables.txt') %>%
as.data.frame() %>%
select(country, age, lx)
D$age   = 0:110    # make ages numeric
D = rbind(D,
expand.grid(country='radix',
age=0:110,
lx=100000))
D$x = 0
D$y = 0
D = D %>%
arrange(age,country)
G = ggplot(data=D,aes(x=x,y=y, group=country, fill=country)) +
lims(x=c(-320,320), y=c(-320,320)) +
geom_point(size=sqrt(D$lx)/2, shape=1, alpha=.30) +
coord_fixed() +
labs(title=paste0('Survivors to age ',frame_time,'\n[Outer Circle = 100,000 male births]'),
caption='Source: Human Mortality Database http://mortality.org\n2016 mortality rates',
fill = 'Country') +
theme_no_axes() +
scale_fill_manual(values=c('gold','red','blue')) +
scale_alpha_manual(values=c(.30,.10,NULL)) +
transition_time(age)
movie = animate(G, fps=4)
anim_save('compare-life-tables-as-circles.gif',
animation=movie )
source('~/GitHub/bonecave/life table circles/points.R', echo=TRUE)
movie
G = ggplot(data=D,aes(x=x,y=y, group=country, color=country)) +
lims(x=c(-320,320), y=c(-320,320)) +
geom_point(size=sqrt(D$lx)/2, shape=1, alpha=.30) +
coord_fixed() +
labs(title=paste0('Survivors to age {frame_time} \n[Outer Circle = 100,000 male births]'),
caption='Source: Human Mortality Database http://mortality.org\n2016 mortality rates',
fill = 'Country') +
theme_no_axes() +
scale_color_manual(values=c('gold','red','blue')) +
scale_alpha_manual(values=c(.30,.10,NULL)) +
transition_time(age)
movie = animate(G, fps=4)
anim_save('compare-life-tables-as-circles.gif',
animation=movie )
movie
# devtools::install_github('thomasp85/gganimate')
library(tidyverse)
library(ggforce)
library(data.table)
library(gganimate)
graphics.off()
windows(record=TRUE)
D = fread('USA SWE male 2016 life tables.txt') %>%
as.data.frame() %>%
select(country, age, lx)
D$age   = 0:110    # make ages numeric
D = rbind(D,
expand.grid(country='radix',
age=0:110,
lx=100000))
D$x = 0
D$y = 0
D = D %>%
arrange(age,country)
G = ggplot(data=D,aes(x=x,y=y, group=country, alpha=country,color=country)) +
lims(x=c(-320,320), y=c(-320,320)) +
geom_point(size=sqrt(D$lx)/2, shape=16) +
coord_fixed() +
labs(title=paste0('Survivors to age {frame_time} \n[Outer Circle = 100,000 male births]'),
caption='Source: Human Mortality Database http://mortality.org\n2016 mortality rates',
fill = 'Country') +
theme_no_axes() +
scale_color_manual(values=c('gold','red','blue')) +
scale_alpha_manual(values=c(.30,.10,NULL)) +
transition_time(age)
movie = animate(G, fps=4)
anim_save('compare-life-tables-as-circles.gif',
animation=movie )
# devtools::install_github('thomasp85/gganimate')
library(tidyverse)
library(ggforce)
library(data.table)
library(gganimate)
graphics.off()
windows(record=TRUE)
D = fread('USA SWE male 2016 life tables.txt') %>%
as.data.frame() %>%
select(country, age, lx)
D$age   = 0:110    # make ages numeric
D = rbind(D,
expand.grid(country='radix',
age=0:110,
lx=100000))
D$x = 0
D$y = 0
D = D %>%
arrange(age,country)
G = ggplot(data=D,aes(x=x,y=y, group=country, alpha=country,color=country)) +
lims(x=c(-320,320), y=c(-320,320)) +
geom_point(size=sqrt(D$lx)/2, shape=16) +
coord_fixed() +
labs(title=paste0('Survivors to age {frame_time} \n[Outer Circle = 100,000 male births]'),
caption='Source: Human Mortality Database http://mortality.org\n2016 mortality rates',
fill = 'Country') +
theme_no_axes() +
scale_color_manual(values=c('gold','red','blue')) +
scale_alpha_manual(values=c(.30,.10,NA)) +
transition_time(age)
movie = animate(G, fps=4)
anim_save('compare-life-tables-as-circles.gif',
animation=movie )
movie
# devtools::install_github('thomasp85/gganimate')
library(tidyverse)
library(ggforce)
library(data.table)
library(gganimate)
graphics.off()
windows(record=TRUE)
D = fread('USA SWE male 2016 life tables.txt') %>%
as.data.frame() %>%
select(country, age, lx)
D$age   = 0:110    # make ages numeric
D = rbind(D,
expand.grid(country='radix',
age=0:110,
lx=100000))
D$x = 0
D$y = 0
D = D %>%
arrange(age,country)
G = ggplot(data=D,aes(x=x,y=y, group=country, alpha=country,color=country)) +
lims(x=c(-320,320), y=c(-320,320)) +
geom_point(size=sqrt(D$lx)/2, shape=16) +
coord_fixed() +
labs(title=paste0('Survivors to age {frame_time} \n[Outer Circle = 100,000 male births]'),
caption='Source: Human Mortality Database http://mortality.org\n2016 mortality rates',
fill = 'Country') +
theme_no_axes() +
scale_color_manual(values=c('grey','gold','red')) +
scale_alpha_manual(values=c(NA,.30,.10)) +
transition_time(age)
movie = animate(G, fps=4)
anim_save('compare-life-tables-as-circles.gif',
animation=movie )
movie
source('~/GitHub/bonecave/life table circles/points.R', echo=TRUE)
movie
