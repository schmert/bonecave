filter(Kenya_sample, mom==3686) %>% View()
hist(Kenya_sample$mom)
hist(Kenya_sample$m)
windows(record=TRUE)
hist(Kenya_sample$m)
Kenya_sample$mombirth
Kenya_sample$mombirth %>% min()
# lowest year at which any selected mom turned 12
range( 12 + Kenya_sample$mombirth)
first_year = 12 + min(Kenya_sample$mombirth)
min
first_year
# lowest year at which any selected mom turned 12
first_year = 12 + min(Kenya_sample$mombirth)
last_year  = max(Kenya_sample$kidbirth)
last_year
first_year:last_year
sum( Kenya_sample$mombirth < 1978)
sum( Kenya_sample$mombirth >= 1978)
first_year
# lowest year at which any selected mom turned 12
first_year = 12 + min(Kenya_sample$mombirth)   # something like 1978
last_year  = max(Kenya_sample$kidbirth)        # almost surely 2014
first_year:last_year
this_year = first_year
# figure out eacn mom's status in this year
tmp = Kenya_sample %>%
mutate(age = this_year - birth_year)
tmp = Kenya_sample %>%
mutate(age = this_year - mombirth)
head(tmp)
head(tmp)
# lowest year at which any selected mom turned 12
min_age    = 12
first_year = min_age + min(Kenya_sample$mombirth)   # something like 1978
last_year  = max(Kenya_sample$kidbirth)        # almost surely 2014
first_year:last_year
this_year = first_year
# figure out eacn mom's status in this year
tmp = Kenya_sample %>%
mutate(age = this_year - mombirth) %>%
filter(age >= min_age)
dim(tmp)
tmp
tmp = Kenya_sample %>%
mutate(age = this_year - mombirth) %>%
filter(age >= min_age) %>%
group_by(mom) %>%
summarize(parity = sum(m <= age))
tmp
tmp = Kenya_sample %>%
mutate(age = this_year - mombirth) %>%
filter(age >= min_age) %>%
group_by(mom, age, this_year) %>%
summarize(parity = sum(m <= age))
tmp = Kenya_sample %>%
mutate(age = this_year - mombirth) %>%
filter(age >= min_age) %>%
group_by(mom, age) %>%
summarize(parity = sum(m <= age))
tmp
tmp = Kenya_sample %>%
mutate(age = this_year - mombirth) %>%
filter(age >= min_age) %>%
group_by(mom, age) %>%
summarize(parity = sum(m <= age)) %>%
ungroup()
tmp$year = this_year
tmp
tmp = Kenya_sample %>%
mutate(age = this_year - mombirth) %>%
filter(age >= min_age) %>%
group_by(mom, age) %>%
summarize(parity = sum(m <= age)) %>%
ungroup() %>%
select(year = this_year, mom, age, parity)
tmp = Kenya_sample %>%
mutate(year = this_year,
age  = this_year - mombirth) %>%
filter(age >= min_age) %>%
group_by(mom, year, age) %>%
summarize(parity = sum(m <= age)) %>%
ungroup()
tmp
####################################################################
# Carl Schmertmann
# created 02 Feb 2019
# altered 02 Feb 2019
#
# construct year-by-year parity histories for a sample of women
# from the Kenya 2014 DHS (83591 births to 23245 women)
####################################################################
set.seed(6447100)
if (!require("ipumsr")) stop("Reading IPUMS data into R requires the ipumsr package. It can be installed using the following command: install.packages('ipumsr')")
library(tidyverse)
ddi   = read_ipums_ddi("idhs_00002.xml")
D     = read_ipums_micro(ddi)
Kenya <- D %>%
filter(COUNTRY==404, YEAR==2014) %>%
mutate(mom = as.numeric(as.factor(CASEID))) %>%
select(CASEID, mom, mombirth=BIRTHYEAR, kid=BIDX,kidbirth=KIDBIRTHYR)
# random sample of moms
n    = 100
nmom = max(Kenya$mom)
selected_moms = sample(nmom, n)
Kenya_sample = Kenya %>%
filter(mom %in% selected_moms) %>%
mutate(m=kidbirth - mombirth)
# lowest year at which any selected mom turned 12
min_age    = 12
first_year = min_age + min(Kenya_sample$mombirth)   # something like 1978
last_year  = max(Kenya_sample$kidbirth)        # almost surely 2014
first_year:last_year
history = data.frame()
for (this_year in first_year:last_year) {
# figure out eacn mom's status in this year
tmp = Kenya_sample %>%
mutate(year = this_year,
age  = this_year - mombirth) %>%
filter(age >= min_age) %>%
group_by(mom, year, age) %>%
summarize(parity = sum(m <= age)) %>%
ungroup()
add_row(history, tmp)
}
####################################################################
# Carl Schmertmann
# created 02 Feb 2019
# altered 02 Feb 2019
#
# construct year-by-year parity histories for a sample of women
# from the Kenya 2014 DHS (83591 births to 23245 women)
####################################################################
set.seed(6447100)
if (!require("ipumsr")) stop("Reading IPUMS data into R requires the ipumsr package. It can be installed using the following command: install.packages('ipumsr')")
library(tidyverse)
ddi   = read_ipums_ddi("idhs_00002.xml")
D     = read_ipums_micro(ddi)
Kenya <- D %>%
filter(COUNTRY==404, YEAR==2014) %>%
mutate(mom = as.numeric(as.factor(CASEID))) %>%
select(CASEID, mom, mombirth=BIRTHYEAR, kid=BIDX,kidbirth=KIDBIRTHYR)
# random sample of moms
n    = 100
nmom = max(Kenya$mom)
selected_moms = sample(nmom, n)
Kenya_sample = Kenya %>%
filter(mom %in% selected_moms) %>%
mutate(m=kidbirth - mombirth)
# lowest year at which any selected mom turned 12
min_age    = 12
first_year = min_age + min(Kenya_sample$mombirth)   # something like 1978
last_year  = max(Kenya_sample$kidbirth)        # almost surely 2014
first_year:last_year
history = data.frame()
for (this_year in first_year:last_year) {
# figure out eacn mom's status in this year
tmp = Kenya_sample %>%
mutate(year = this_year,
age  = this_year - mombirth) %>%
filter(age >= min_age) %>%
group_by(mom, year, age) %>%
summarize(parity = sum(m <= age)) %>%
ungroup()
history = rbind(history,
tmp)
}
dim(history)
history
View(history)
range(history$parity)
ggplot( data=history, aes(x=parity, y=age)) +
geom_point(alpha=.40)
####################################################################
# Carl Schmertmann
# created 02 Feb 2019
# altered 02 Feb 2019
#
# construct year-by-year parity histories for a sample of women
# from the Kenya 2014 DHS (83591 births to 23245 women)
####################################################################
set.seed(6447100)
if (!require("ipumsr")) stop("Reading IPUMS data into R requires the ipumsr package. It can be installed using the following command: install.packages('ipumsr')")
library(tidyverse)
ddi   = read_ipums_ddi("idhs_00002.xml")
D     = read_ipums_micro(ddi)
Kenya <- D %>%
filter(COUNTRY==404, YEAR==2014) %>%
mutate(mom = as.numeric(as.factor(CASEID))) %>%
select(CASEID, mom, mombirth=BIRTHYEAR, kid=BIDX,kidbirth=KIDBIRTHYR)
# random sample of moms
n    = 100
nmom = max(Kenya$mom)
selected_moms = sample(nmom, n)
Kenya_sample = Kenya %>%
filter(mom %in% selected_moms) %>%
mutate(m=kidbirth - mombirth)
# lowest year at which any selected mom turned 12
min_age    = 12
first_year = min_age + min(Kenya_sample$mombirth)   # something like 1978
last_year  = max(Kenya_sample$kidbirth)        # almost surely 2014
first_year:last_year
history = data.frame()
for (this_year in first_year:last_year) {
# figure out eacn mom's status in this year
tmp = Kenya_sample %>%
mutate(year = this_year,
age  = this_year - mombirth) %>%
filter(age >= min_age) %>%
group_by(mom, year, age) %>%
summarize(parity = sum(m <= age)) %>%
ungroup()
history = rbind(history,
tmp)
}
graphics.off()
windows(record=TRUE)
ggplot( data=history, aes(x=parity, y=age)) +
geom_point(alpha=.40)
ggplot( data=history, aes(x=parity, y=age)) +
geom_point(alpha=.40) +
scale_y_reverse() +
theme_bw()
ggplot( data=history, aes(x=parity, y=age, group=woman)) +
geom_path(alpha=.40) +
scale_y_reverse() +
theme_bw()
ggplot( data=history, aes(x=parity, y=age, group=mom)) +
geom_path(alpha=.40) +
scale_y_reverse() +
theme_bw()
####################################################################
# Carl Schmertmann
# created 02 Feb 2019
# altered 02 Feb 2019
#
# construct year-by-year parity histories for a sample of women
# from the Kenya 2014 DHS (83591 births to 23245 women)
####################################################################
set.seed(6447100)
if (!require("ipumsr")) stop("Reading IPUMS data into R requires the ipumsr package. It can be installed using the following command: install.packages('ipumsr')")
library(tidyverse)
ddi   = read_ipums_ddi("idhs_00002.xml")
D     = read_ipums_micro(ddi)
Kenya <- D %>%
filter(COUNTRY==404, YEAR==2014) %>%
mutate(mom = as.numeric(as.factor(CASEID))) %>%
select(CASEID, mom, mombirth=BIRTHYEAR, kid=BIDX,kidbirth=KIDBIRTHYR)
# random sample of moms
n    = 100
nmom = max(Kenya$mom)
selected_moms = sample(nmom, n)
Kenya_sample = Kenya %>%
filter(mom %in% selected_moms) %>%
mutate(m=kidbirth - mombirth)
# lowest year at which any selected mom turned 12
min_age    = 12
first_year = min_age + min(Kenya_sample$mombirth)   # something like 1978
last_year  = max(Kenya_sample$kidbirth)        # almost surely 2014
first_year:last_year
history = data.frame()
for (this_year in first_year:last_year) {
# figure out eacn mom's status in this year
tmp = Kenya_sample %>%
mutate(year = this_year,
age  = this_year - mombirth) %>%
filter(age >= min_age) %>%
group_by(mom, year, age) %>%
summarize(parity = sum(m <= age)) %>%
ungroup()
history = rbind(history,
tmp)
}
graphics.off()
windows(record=TRUE)
for (this_year in first_year:last_year) {
ggplot( data=filter(history, year==this_year),
aes(x=parity, y=age, group=mom)) +
geom_path(alpha=.40) +
scale_y_reverse() +
theme_bw()
}
####################################################################
# Carl Schmertmann
# created 02 Feb 2019
# altered 02 Feb 2019
#
# construct year-by-year parity histories for a sample of women
# from the Kenya 2014 DHS (83591 births to 23245 women)
####################################################################
set.seed(6447100)
if (!require("ipumsr")) stop("Reading IPUMS data into R requires the ipumsr package. It can be installed using the following command: install.packages('ipumsr')")
library(tidyverse)
ddi   = read_ipums_ddi("idhs_00002.xml")
D     = read_ipums_micro(ddi)
Kenya <- D %>%
filter(COUNTRY==404, YEAR==2014) %>%
mutate(mom = as.numeric(as.factor(CASEID))) %>%
select(CASEID, mom, mombirth=BIRTHYEAR, kid=BIDX,kidbirth=KIDBIRTHYR)
# random sample of moms
n    = 100
nmom = max(Kenya$mom)
selected_moms = sample(nmom, n)
Kenya_sample = Kenya %>%
filter(mom %in% selected_moms) %>%
mutate(m=kidbirth - mombirth)
# lowest year at which any selected mom turned 12
min_age    = 12
first_year = min_age + min(Kenya_sample$mombirth)   # something like 1978
last_year  = max(Kenya_sample$kidbirth)        # almost surely 2014
first_year:last_year
history = data.frame()
for (this_year in first_year:last_year) {
# figure out eacn mom's status in this year
tmp = Kenya_sample %>%
mutate(year = this_year,
age  = this_year - mombirth) %>%
filter(age >= min_age) %>%
group_by(mom, year, age) %>%
summarize(parity = sum(m <= age)) %>%
ungroup()
history = rbind(history,
tmp)
}
graphics.off()
windows(record=TRUE)
for (this_year in first_year:last_year) {
ggplot( data=filter(history, year==this_year),
aes(x=parity, y=age, group=mom)) +
geom_path(alpha=.40) +
scale_y_reverse() +
theme_bw() %>%
print()
}
####################################################################
# Carl Schmertmann
# created 02 Feb 2019
# altered 02 Feb 2019
#
# construct year-by-year parity histories for a sample of women
# from the Kenya 2014 DHS (83591 births to 23245 women)
####################################################################
set.seed(6447100)
if (!require("ipumsr")) stop("Reading IPUMS data into R requires the ipumsr package. It can be installed using the following command: install.packages('ipumsr')")
library(tidyverse)
ddi   = read_ipums_ddi("idhs_00002.xml")
D     = read_ipums_micro(ddi)
Kenya <- D %>%
filter(COUNTRY==404, YEAR==2014) %>%
mutate(mom = as.numeric(as.factor(CASEID))) %>%
select(CASEID, mom, mombirth=BIRTHYEAR, kid=BIDX,kidbirth=KIDBIRTHYR)
# random sample of moms
n    = 100
nmom = max(Kenya$mom)
selected_moms = sample(nmom, n)
Kenya_sample = Kenya %>%
filter(mom %in% selected_moms) %>%
mutate(m=kidbirth - mombirth)
# lowest year at which any selected mom turned 12
min_age    = 12
first_year = min_age + min(Kenya_sample$mombirth)   # something like 1978
last_year  = max(Kenya_sample$kidbirth)        # almost surely 2014
first_year:last_year
history = data.frame()
for (this_year in first_year:last_year) {
# figure out eacn mom's status in this year
tmp = Kenya_sample %>%
mutate(year = this_year,
age  = this_year - mombirth) %>%
filter(age >= min_age) %>%
group_by(mom, year, age) %>%
summarize(parity = sum(m <= age)) %>%
ungroup()
history = rbind(history,
tmp)
}
graphics.off()
windows(record=TRUE)
for (this_year in first_year:last_year) {
G =
ggplot( data=filter(history, year==this_year),
aes(x=parity, y=age, group=mom)) +
geom_path(alpha=.40) +
scale_y_reverse() +
labs(title=this_year) +
theme_bw()
print(G)
}
for (this_year in first_year:last_year) {
G =
ggplot( data=filter(history, year==this_year),
aes(x=parity, y=age, group=mom)) +
geom_point(alpha=.40) +
scale_y_reverse() +
labs(title=this_year) +
theme_bw()
print(G)
}
for (this_year in first_year:last_year) {
G =
ggplot( data=filter(history, year==this_year),
aes(x=parity, y=age, group=mom)) +
geom_point(alpha=.40) +
scale_y_reverse() +
labs(title=this_year, y=min_age:50) +
theme_bw()
print(G)
}
for (this_year in first_year:last_year) {
G =
ggplot( data=filter(history, year==this_year),
aes(x=parity, y=age, group=mom)) +
geom_point(alpha=.40) +
scale_y_reverse() +
labs(title=this_year) +
lims(y=min_age:50) +
theme_bw()
print(G)
}
graphics.off()
windows(record=TRUE)
for (this_year in first_year:last_year) {
G =
ggplot( data=filter(history, year==this_year),
aes(x=parity, y=age, group=mom)) +
geom_point(alpha=.40) +
scale_y_reverse() +
labs(title=this_year) +
lims(y=c(min_age,50)) +
theme_bw()
print(G)
}
graphics.off()
windows(record=TRUE)
for (this_year in first_year:last_year) {
G =
ggplot( data=filter(history, year==this_year),
aes(x=parity, y=age, group=mom)) +
geom_point(alpha=.40) +
lims(y=c(min_age,50)) +
scale_y_reverse() +
labs(title=this_year) +
theme_bw()
print(G)
}
for (this_year in first_year:last_year) {
G =
ggplot( data=filter(history, year==this_year),
aes(x=parity, y=age, group=mom)) +
geom_point(alpha=.40) +
geom_line() +
lims(y=c(min_age,50)) +
scale_y_reverse() +
labs(title=this_year) +
theme_bw()
print(G)
}
graphics.off()
windows(record=TRUE)
for (this_year in first_year:last_year) {
G =
ggplot( data=filter(history, year==this_year),
aes(x=parity, y=age, group=mom)) +
geom_point(alpha=.40) +
ylim=c(min_age,50) +
scale_y_reverse() +
labs(title=this_year) +
theme_bw()
print(G)
}
min_age
graphics.off()
windows(record=TRUE)
for (this_year in first_year:last_year) {
G =
ggplot( data=filter(history, year==this_year),
aes(x=parity, y=age, group=mom)) +
geom_point(alpha=.40) +
ylim(min_age,50) +
scale_y_reverse() +
labs(title=this_year) +
theme_bw()
print(G)
}
graphics.off()
windows(record=TRUE)
for (this_year in first_year:last_year) {
G =
ggplot( data=filter(history, year==this_year),
aes(x=parity, y=age, group=mom)) +
geom_point(alpha=.40) +
ylim(min_age,50) +
xlim(range(history$parity)) +
scale_y_reverse() +
labs(title=this_year) +
theme_bw()
print(G)
}
graphics.off()
windows(record=TRUE)
for (this_year in first_year:last_year) {
G =
ggplot( data=filter(history, year==this_year),
aes(x=parity, y=age, group=mom)) +
geom_point(alpha=.40) +
ylim(min_age,50) +
xlim(c(0, max(history$parity))) +
scale_y_reverse() +
labs(title=this_year) +
theme_bw()
print(G)
}
